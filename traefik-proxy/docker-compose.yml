version: '3'

services:
  traefik-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.9
    # Web ui tls
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik-https.rule=Host(`traefik.cocochino.cafe`) && Path(`/dashboard`)"
      - "traefik.http.routers.traefik-https.entrypoints=web"
      # - "traefik.http.routers.traefik-https.tls=true"
      # - "traefik.http.routers.traefik-https.tls.certresolver=myresolver"
      - "traefik.http.routers.traefik-https.service=api@internal"
      - "traefik.http.routers.traefik-https.middlewares=traefik-https-auth"
      - "traefik.http.middlewares.traefik-https-auth.basicauth.users=${TRAEFIK_AUTH_USER}:${TRAEFIK_AUTH_PASS}"
    # Traefik health check
    healthcheck:
      test: wget --quiet --tries=1 --spider http://ping.127.0.0.1.nip.io/ping || exit 1
      interval: 10s
      timeout: 1s
      retries: 3
      start_period: 10s
    # .env file for traefik
    env_file:
      - .env
    # Enables the web UI and tells Traefik to listen to docker
    command:
      # Lets encrypt cert resolver
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.myresolver.acme.email=${TRAEFIK_CERT_RESOLVER_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      # Traefik address, secure address
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.insecure=true
      - --api.dashboard=true
      - --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      # Lets encrypt
      - ./letsencrypt:/letsencrypt
    restart: always